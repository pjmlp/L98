/* factorial.l98 : calculates factorials.
 * Copyright (C) 1999  Paulo Pinto, Pablo Tavares
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */ 
let
   var value : int := 0

   
   fun fact (val v : int):int = if v = 0 then
                                  return 1
			        else
			          return v * fact (v -1)

   fun factiter (val v : int):int  = let
                                       var count : int := 1
				     in
				      for i = 1 upto v do
				        count := count * i;
				      return count
				     end


in
  value := readint ();
  printint (fact (value));
  println ();
  printint (2 * factiter (value) + 1);
  println ()
end
